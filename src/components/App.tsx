import { FC, useEffect, useState } from "react";

import { Stack, Accordion, FormSelect, Alert } from "react-bootstrap";
import { useGetStatisticsQuery } from "../redux/rtk";
import { IData, IDataset, IStatus, IUser } from "../utils/interfaces";
import MyChart from "./MyChart";
import MyTable from "./MyTable";
import SkeletonTable from "./SkeletonTable";

import cohort from "../assets/cohort.png";

const App: FC = () => {
  const [interval, setInterval] = useState(7);
  const [status, setStatus] = useState<IStatus>({
    isError: false,
    isFetching: true,
    isSuccess: false,
  });
  const [datasets, setDatasets] = useState<IDataset[][]>([]);
  const [users, setUsers] = useState<IUser[][]>([]);

  const { data, isSuccess, isError, isFetching } = useGetStatisticsQuery({
    channelId: "aaeb08bd-a5e5-4425-98af-fd53b45f3b0a",
    interval,
  });

  useEffect(() => {
    setStatus({
      isFetching,
      isError,
      isSuccess,
    });
  }, [isSuccess, isError, isFetching]);

  const formatData = (data: IData[] | undefined) => {
    if (!data || data.length === 0) {
      return { datasets: [], users: [] };
    }

    const datasets = data.map((data) => data.datasets);
    const users = data.map((data) => data.users);

    return { datasets, users };
  };

  useEffect(() => {
    const { datasets, users } = formatData(data);

    setDatasets(datasets);
    setUsers(users);
  }, [data]);

  const handleChange = (value: number) => {
    setInterval(value);
  };

  return (
    <Stack className="max-w-[1200px] m-auto">
      <Stack
        direction="horizontal"
        style={{ alignItems: "flex-start", gap: "4rem" }}
        className="mt-12 mb-8"
      >
        <Accordion className="w-1/2">
          <Accordion.Item eventKey="0">
            <Accordion.Header>–û—Ç—Ç–æ–∫ –ø–æ –≤—Ä–µ–º–µ–Ω–∏</Accordion.Header>
            <Accordion.Body className="flex flex-col gap-3">
              <p>
                –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Ö, —É –∫–æ–≥–æ –Ω–µ –Ω–∞–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏,
                –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç —Å –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è
                –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏.
              </p>
              <p>
                –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≥—Ä—É–ø–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫–æ–≥–æ—Ä—Ç–∞) –ø–æ
                –∏–Ω—Ç–µ—Ä–≤–∞–ª—É –≤—Ä–µ–º–µ–Ω–∏ (–¥–µ–Ω—å –∏–ª–∏ –±–æ–ª—å—à–µ), –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∏—Ö –¥–≤–∏–∂–µ–Ω–∏–µ
                –ø–æ –¥–Ω—è–º.
              </p>
              <p>
                –ó–¥–æ—Ä–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫ –±—É–¥–µ—Ç —á–∏—Ç–∞—Ç—å –≤–∞—à –∫–∞–Ω–∞–ª –¥–æ–ª–≥–æ, –±–µ–∑ —Ä–µ–∑–∫–∏–π
                –¥–≤–∏–∂–µ–Ω–∏–π. –ö–æ—Ä–æ—Ç–∫–∏–π –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –∏ –º–∞—Å—Å–æ–≤—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è ‚Äì –ø—Ä–∏–∑–Ω–∞–∫
                –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ (–±–æ—Ç—ã, –Ω–∞–∫—Ä—É—Ç–∫–∏).
              </p>
            </Accordion.Body>
          </Accordion.Item>
        </Accordion>

        <FormSelect
          className="w-1/2 h-[52px]"
          onChange={(e) => handleChange(+e.currentTarget.value)}
        >
          <option value={7}>–ó–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é</option>
          <option value={14}>–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –Ω–µ–¥–µ–ª–∏</option>
          <option value={21}>–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –Ω–µ–¥–µ–ª–∏</option>
        </FormSelect>
      </Stack>

      {status.isError ? (
        <Alert key="danger" variant="danger">
          –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
        </Alert>
      ) : (
        <Stack className="mb-12">
          <Accordion>
            <Accordion.Item eventKey="0">
              <Accordion.Header>–¢–∞–±–ª–∏—Ü–µ–π</Accordion.Header>
              <Accordion.Body className="flex flex-col gap-3">
                <p>
                  <span className="font-bold">–î–∞—Ç–∞</span> ‚Äì —ç—Ç–æ –∫–æ–≥–æ—Ä—Ç–∞,
                  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –ø—Ä–∏—à–µ–¥—à–∏–µ –∑–∞ –¥–µ–Ω—å.
                </p>
                <p>
                  <span className="font-bold">–°–≤–æ–¥–∫–∞:</span>
                  <br />
                  üë• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏—à–ª–æ –≤ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å ‚Üí –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å,
                  <br />
                  üìâ —Å—É–º–º–∞—Ä–Ω—ã–π –æ—Ç—Ç–æ–∫,
                  <br />
                  üïí —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –ø—Ä–æ—à–ª–æ —Å –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –∫–æ–≥–æ—Ä—Ç—ã.
                </p>
                <p>
                  <span className="font-bold">–Ø—á–µ–π–∫–∏ –ø–æ –¥–Ω—è–º:</span>
                  <br />
                  % ‚Äì –æ—Ç—Ç–æ–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–Ω—è (–Ω–µ –ø–µ—Ä–≤–æ–≥–æ). <br />
                  –ü–µ—Ä–≤–∞—è —Ü–∏—Ñ—Ä–∞ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.{" "}
                  <br />
                  –í—Ç–æ—Ä–∞—è —Ü–∏—Ñ—Ä–∞ ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—à–µ–¥—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. <br />
                  –ß–µ–º —è—Ä—á–µ üü• –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç ‚Äì —Ç–µ–º –±–æ–ª—å—à–µ —É—à–ª–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ —ç—Ç–æ—Ç
                  –ø–µ—Ä–∏–æ–¥.
                </p>
              </Accordion.Body>
            </Accordion.Item>
          </Accordion>

          {status.isFetching ? (
            <SkeletonTable />
          ) : (
            <MyTable datasets={datasets} />
          )}
        </Stack>
      )}

      <Stack className="mb-12">
        <Accordion>
          <Accordion.Item eventKey="0">
            <Accordion.Header>–ì—Ä–∞—Ñ–∏–∫–æ–º</Accordion.Header>
            <Accordion.Body className="flex flex-col gap-3">
              <p>
                –ù–∞ –≥—Ä–∞—Ñ–∏–∫–µ –ø–æ–∫–∞–∑–∞–Ω –æ—Ç—Ç–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ –∫–æ–≥–æ—Ä—Ç–∞—Ö –ø–æ –¥–Ω—è–º. –î–ª—è
                –Ω–∞–≥–ª—è–¥–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –≤
                –ø—Ä–æ—Ü–µ–Ω—Ç—ã.
              </p>
              <p>
                üß† –ß–µ–º –±–æ–ª–µ–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –±–µ–∑ —Ä–µ–∑–∫–∏—Ö –ø–∞–¥–µ–Ω–∏–π –≤–Ω–∏–∑, —Ç–µ–º
                –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–µ–µ –∞—É–¥–∏—Ç–æ—Ä–∏—è. –ß–µ–º –±—ã—Å—Ç—Ä–µ–µ –ø–∞–¥–∞–µ—Ç –≥—Ä–∞—Ñ–∏–∫ –≤–Ω–∏–∑ ‚Äì —Ç–µ–º
                —Ö—É–∂–µ –∞—É–¥–∏—Ç–æ—Ä–∏—è, —Å–ª–∏–≤ –±—é–¥–∂–µ—Ç–∞.
              </p>
              <p>–ó–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–µ ‚Äì –æ–±—â–∏–π –æ—Ç—Ç–æ–∫ –≤ –∫–æ–≥–æ—Ä—Ç–µ.</p>
              <p>‚Üí –ü–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ ‚Äì –¥–Ω–∏ –∂–∏–∑–Ω–∏ –∫–æ–≥–æ—Ä—Ç—ã.</p>
              <p>
                ‚Üë –ü–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ —Å–≤–µ—Ä—Ö—É ‚Äì –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.
              </p>
              <p className="flex items-center gap-2">
                <img src={cohort} alt="" className="w-[100px] border" />
                –ú–æ–∂–Ω–æ –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏ –Ω–æ–º–µ—Ä –∫–æ–≥–æ—Ä—Ç—ã, —á—Ç–æ–±—ã
                –¥–æ–±–∞–≤–ª—è—Ç—å/—É–±–∏—Ä–∞—Ç—å –µ–µ –∏–∑ –≥—Ä–∞—Ñ–∏–∫–∞
              </p>
            </Accordion.Body>
          </Accordion.Item>
        </Accordion>

        {status.isError ? (
          <Alert key="danger" variant="danger">
            –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
          </Alert>
        ) : (
          <MyChart data={datasets} status={status} />
        )}
      </Stack>

      <Stack className="mb-12">
        {/* <MyDetails data={{ datasets, users }} /> */}
      </Stack>
    </Stack>
  );
};

export default App;
